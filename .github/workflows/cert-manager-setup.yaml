name: Cert Manager Setup

on:
  workflow_dispatch:  # Allows manual triggering
  push:
    branches:
      - main
    paths:
      - 'helm/cert-manager/**'
      - '.github/workflows/cert-manager-setup.yaml'

jobs:
  setup-cert-manager:
    runs-on: ubuntu-latest
    environment: terraform  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download kubeconfig from S3
        run: aws s3 cp s3://my-terraform-backup-0701/kubeconfig ./kubeconfig.yaml

      - name: Create AWS credentials secret
        run: |
          cat <<EOF > helm/cert-manager/aws-secret.yaml
          apiVersion: v1
          kind: Secret
          metadata:
            name: route53-credentials-secret
            namespace: cert-manager
          type: Opaque
          stringData:
            secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF

      - name: Create ClusterIssuer
        run: |
          cat <<EOF > helm/cert-manager/cluster-issuer.yaml
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              server: https://acme-v02.api.letsencrypt.org/directory
              email: ${{ secrets.ACME_EMAIL }}
              privateKeySecretRef:
                name: letsencrypt-prod
              solvers:
              - dns01:
                  route53:
                    region: ${{ secrets.AWS_REGION }}
                    hostedZoneID: ${{ secrets.AWS_HOSTED_ZONE_ID }}
                    accessKeyID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    secretAccessKeySecretRef:
                      name: route53-credentials-secret
                      key: secret-access-key
          EOF

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Apply cert-manager configuration
        env:
          KUBECONFIG: ./kubeconfig.yaml
        run: |
          kubectl apply -f helm/cert-manager/aws-secret.yaml
          kubectl apply -f helm/cert-manager/cluster-issuer.yaml

      - name: Verify setup
        env:
          KUBECONFIG: ./kubeconfig.yaml
        run: |
          echo "Verifying cert-manager setup..."
          kubectl get secret route53-credentials-secret -n cert-manager
          kubectl get clusterissuer letsencrypt-prod 