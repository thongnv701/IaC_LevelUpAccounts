apiVersion: apps/v1
kind: Deployment
metadata:
  name: level-up-accounts-api
  namespace: level-up-accounts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: level-up-accounts-api
  template:
    metadata:
      labels:
        app: level-up-accounts-api
    spec:
      initContainers:
      - name: fetch-config
        image: curlimages/curl:latest
        command: 
        - /bin/sh
        - -c
        - |
          echo "=== Debugging Secret Mount ==="
          echo "Checking /etc/github directory..."
          ls -la /etc/github || echo "Directory not found"
          
          echo "=== Checking GitHub Token ==="
          if [ -f /etc/github/token ]; then
            echo "✅ Token file exists"
            TOKEN=$(cat /etc/github/token)
            echo "Token length: ${#TOKEN}"
            echo "Token first 4 chars: ${TOKEN:0:4}"
            
            if [ -z "$TOKEN" ]; then
              echo "❌ Token is empty!"
              echo "This usually means External Secrets Operator failed to sync the secret"
              exit 1
            fi
            
            if [ ${#TOKEN} -lt 20 ]; then
              echo "❌ Token appears too short (${#TOKEN} chars)"
              echo "GitHub tokens should be 40+ characters"
              exit 1
            fi
          else
            echo "❌ Token file does not exist!"
            echo "External Secrets Operator may not be working properly"
            exit 1
          fi
          
          echo "=== Testing GitHub Token ==="
          # Test token with a simple API call first
          echo "Testing token against GitHub API..."
          AUTH_TEST=$(curl -s -H "Authorization: token $TOKEN" https://api.github.com/user)
          if echo "$AUTH_TEST" | grep -q '"login"'; then
            echo "✅ GitHub token is valid"
            USER=$(echo "$AUTH_TEST" | grep '"login"' | cut -d'"' -f4)
            echo "Authenticated as: $USER"
          else
            echo "❌ GitHub token authentication failed"
            echo "API Response: $AUTH_TEST"
            echo "Please check:"
            echo "1. Token in AWS Secrets Manager is valid"
            echo "2. Token has 'Contents' permission for the repository"
            echo "3. Token hasn't expired"
            exit 1
          fi
          
          echo "=== Fetching Configuration ==="
          curl -v -H "Authorization: token $TOKEN" \
               -H "Accept: application/vnd.github.v3.raw" \
               -L https://api.github.com/repos/thongnv701/secret-key/contents/levelupaccounts/appsettings.json \
               -o /config/appsettings.json
               
          if [ $? -eq 0 ] && [ -f /config/appsettings.json ]; then
            echo "✅ Config file fetched successfully"
            echo "=== Config file contents ==="
            cat /config/appsettings.json
            
            # Validate JSON format
            if command -v jq > /dev/null; then
              echo "=== Validating JSON format ==="
              if jq . /config/appsettings.json > /dev/null; then
                echo "✅ JSON is valid"
              else
                echo "❌ Invalid JSON format"
                exit 1
              fi
            fi
          else
            echo "❌ Failed to fetch config file"
            echo "Please check:"
            echo "1. Repository 'thongnv701/secret-key' exists and is accessible"
            echo "2. File 'levelupaccounts/appsettings.json' exists in the repository"
            echo "3. Token has 'Contents' read permission"
            exit 1
          fi
        volumeMounts:
        - name: config-volume
          mountPath: /config
        - name: github-auth
          mountPath: /etc/github
          readOnly: true
      containers:
      - name: api
        image: docker.io/thongnv0701/levelupaccounts:latest
        command: ["dotnet"]
        args: ["LevelUpAccounts.API.dll"]
        workingDir: /app
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: github-auth
          mountPath: /etc/github
          readOnly: true
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:8080"
        - name: ASPNETCORE_CONFIGURATION_PATH
          value: "/app/config/appsettings.json"
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: 8080
          initialDelaySeconds: 30  # Increased delay to ensure config is loaded
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: 8080
          initialDelaySeconds: 45  # Increased delay for startup
          periodSeconds: 20
      volumes:
      - name: config-volume
        emptyDir: {}
      - name: github-auth
        secret:
          secretName: github-auth
          items:
          - key: token
            path: token 